{"name":"Motion Objection","tagline":"Wrapping Objection in RubyMotion.","body":"motion-objection\r\n================\r\n\r\nWrapping the dependency injection library [Objection](https://github.com/atomicobject/objection) in RubyMotion.\r\n\r\n<!-- [![Build Status](https://travis-ci.org/atomicobject/motion-objection.png)](https://travis-ci.org/atomicobject/motion-objection) -->\r\n[![Gem Version](https://badge.fury.io/rb/motion-objection.png)](http://badge.fury.io/rb/motion-objection)\r\n[![Code Climate](https://codeclimate.com/github/atomicobject/motion-objection.png)](https://codeclimate.com/github/atomicobject/motion-objection)\r\n\r\n## Install\r\n```bash\r\ngem install motion-objection\r\n```\r\n## Basic Example\r\n\r\n```ruby\r\nclass Car\r\n  include Objection::Compose\r\n  compose_with :engine, :brakes, factory: JSObjectFactory\r\nend\r\n\r\nclass Engine\r\n  include Objection::Compose\r\n  singleton\r\n  compose_with 'engine/crank_shaft', 'engine/rod'\r\n\r\n  def shift(wat)\r\n    puts \"SHIFT!\"\r\n  end\r\n\r\n  class CrankShaft\r\n  end \r\n\r\n  class Rod\r\n  end\r\nend\r\n\r\nclass Brakes\r\n  def brake!\r\n  end\r\nend\r\n```\r\n\r\n## Initializers\r\n\r\n```ruby\r\nclass ViewController < NSObject\r\n  include Objection::Compose\r\n  initializer \"initWithNibName:bundle:\", \"Home\"\r\n\r\n  attr_reader :name\r\n\r\n  def initWithNibName(name, bundle: bundle)\r\n    self.init\r\n    self.tap do\r\n      @name = name\r\n    end\r\n  end\r\nend\r\n```\r\n\r\n## Injector\r\n\r\n```ruby\r\nObjection.default_injector = Objection.injector AppModule.new, SecondaryModule.new\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}